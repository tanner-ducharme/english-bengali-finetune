{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1167,"status":"ok","timestamp":1713710970388,"user":{"displayName":"Tanner Ducharme","userId":"07594315806145751874"},"user_tz":240},"id":"fCxvdkxaZk6F","outputId":"1469cd36-7479-4ecf-f956-e6fc7be014e0"},"outputs":[{"name":"stdout","output_type":"stream","text":["Drive already mounted at /content/drive/; to attempt to forcibly remount, call drive.mount(\"/content/drive/\", force_remount=True).\n","/content/drive/MyDrive/MILA/WINTER2024/IFT6289-NLP/term_project\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive/')\n","%cd /content/drive/MyDrive/MILA/WINTER2024/IFT6289-NLP/term_project/\n","\n","import sys\n","# If your Python files are in the 'part2' directory or a subdirectory of it, add 'part2' to the path\n","sys.path.append('/content/drive/MyDrive/MILA/WINTER2024/IFT6289-NLP/term_project/')"]},{"cell_type":"markdown","source":["## set your HF token in 'secrets'"],"metadata":{"id":"dX8Qi60mwCfg"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"VEgXRrJsaDci"},"outputs":[],"source":["from google.colab import userdata\n","hf_token = userdata.get('HFwrite')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Nt9d1Rb_acQp"},"outputs":[],"source":["!pip install transformers accelerate peft bitsandbytes datasets"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EepBzTS0aoxU"},"outputs":[],"source":["from transformers import AutoTokenizer, AutoModelForCausalLM, BitsAndBytesConfig, GenerationConfig\n","import torch\n","from peft import PeftModel"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8U1cCSEdaqTF"},"outputs":[],"source":["exp_name = \"gemma-7b-baseline-longer-train\""]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":49,"referenced_widgets":["cf7db6e9b16b4c02a3045195995f8d26","2cbf40d379de4513b12f18bfd3a34f15","928ed06a92a04ad1ad6220a10eefe9de","36c320858a32423da3ff6ba2c986018f","1930ec09fa0e422ca7054983674c74d3","7aab08dc73ba4a759ccd05100284222d","29b8b61b71fd426fa28a7830fcb62a8c","7547bcc3f5214818ae5c59a39c26f126","f04de1cd810241e0af7d4196ea1c7dca","167c094075c34cfd8f5d5c6a2bf7ed20","33989fcc9e3941baa26a6952e508cf11"]},"executionInfo":{"elapsed":12298,"status":"ok","timestamp":1713710988813,"user":{"displayName":"Tanner Ducharme","userId":"07594315806145751874"},"user_tz":240},"id":"cH3Go2w4av5e","outputId":"8de96205-78d0-403b-a5e9-be23a08d9c6e"},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cf7db6e9b16b4c02a3045195995f8d26","version_major":2,"version_minor":0},"text/plain":["Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"}],"source":["base_model_name = \"google/gemma-7b\"\n","compute_dtype = getattr(torch, \"float16\")\n","bnb_config = BitsAndBytesConfig(\n","    load_in_4bit=True,\n","    bnb_4bit_quant_type=\"nf4\",\n","    bnb_4bit_compute_dtype=compute_dtype,\n","    bnb_4bit_use_double_quant=True,\n","  )\n","base_model = AutoModelForCausalLM.from_pretrained(\n","        base_model_name, device_map={\"\": 0}, quantization_config=bnb_config, token=hf_token\n","  )\n","tokenizer = AutoTokenizer.from_pretrained(base_model_name, use_fast=True, token=hf_token)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Vi-YUjGomWaI"},"outputs":[],"source":["model = PeftModel.from_pretrained(base_model, f\"results/{exp_name}/checkpoint-5000/\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IUHQMBtqazc9"},"outputs":[],"source":["del base_model"]},{"cell_type":"markdown","metadata":{"id":"Q2FhSGcFmiMY"},"source":["# get data"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"y9rtJyxhmjG_"},"outputs":[],"source":["def read_sentences(file_path):\n","  with open(file_path, encoding='utf-8') as file:\n","      sentences = file.read().strip().split('\\n')\n","  return sentences"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ayS7XBsUmni9"},"outputs":[],"source":["def generate_eval_prompt(source_sentence):\n","    text = f\"\"\"{source_sentence} ###> \"\"\"\n","    return text\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9DNnvPVBmn-E"},"outputs":[],"source":["source_lang = \"bn\"\n","target_lang = \"en\"\n","\n","\n","# get test data\n","supara_source_val_path = f\"data/SUPara-benchmark/suparadev2018/suparadev_{source_lang}.txt\"\n","supara_target_val_path = f\"data/SUPara-benchmark/suparadev2018/suparadev_{target_lang}.txt\"\n","\n","rising_source_val_path = f\"data/RisingNews-benchmark/RisingNews.valid.{source_lang}\"\n","rising_target_val_path = f\"data/RisingNews-benchmark/RisingNews.valid.{target_lang}\"\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kO4XkogXmpKD"},"outputs":[],"source":["# # read SUPara source language data\n","supara_source_val_raw = read_sentences(supara_source_val_path)\n","# # read SUPara target language data\n","supara_target_val = read_sentences(supara_target_val_path)\n","\n","# # read SUPara source language data\n","rising_source_val_raw = read_sentences(rising_source_val_path)\n","# # read SUPara target language data\n","rising_target_val = read_sentences(rising_target_val_path)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":18,"status":"ok","timestamp":1713710989688,"user":{"displayName":"Tanner Ducharme","userId":"07594315806145751874"},"user_tz":240},"id":"WA750bHBmqiq","outputId":"5f744c30-d8fa-4f39-cb04-ba96fc759f1d"},"outputs":[{"name":"stdout","output_type":"stream","text":["SUPara source validation sentence before and after system prompt:\n","BEFORE:\n","আমি আমার জন্মভূমিকে ভালবাসি।\n","AFTER:\n","Translate the following Bengali text into English: আমি আমার জন্মভূমিকে ভালবাসি। ###> \n","\n","SUPara target language test sentence:\n","I love my motherland.\n","\n","RisingNews source validation sentence before and after system prompt:\n","BEFORE:\n","সফরের সময়সূচি অনুযায়ী, সিঙ্গাপুর এয়ারলাইন্সের একটি নিয়মিত ফ্লাইট রাষ্ট্রপতি ও তার সফরসঙ্গীদের নিয়ে হজরত শাহজালাল আন্তর্জাতিক বিমানবন্দর থেকে উড্ডয়ন করবে।\n","AFTER:\n","Translate the following Bengali text into English: সফরের সময়সূচি অনুযায়ী, সিঙ্গাপুর এয়ারলাইন্সের একটি নিয়মিত ফ্লাইট রাষ্ট্রপতি ও তার সফরসঙ্গীদের নিয়ে হজরত শাহজালাল আন্তর্জাতিক বিমানবন্দর থেকে উড্ডয়ন করবে। ###> \n","\n","RisingNews target language test sentence:\n","According to the schedule of the visit, a regular flight of Singapore Airlines carrying the President and his entourage members will take off from Hazrat Shahjalal International Airport.\n"]}],"source":["supara_source_val = [generate_eval_prompt(source) for source in supara_source_val_raw]\n","rising_source_val = [generate_eval_prompt(source) for source in rising_source_val_raw]\n","\n","\n","print(\"SUPara source validation sentence before and after system prompt:\")\n","print(f\"BEFORE:\\n{supara_source_val_raw[0]}\")\n","print(f\"AFTER:\\n{supara_source_val[0]}\")\n","\n","print(\"\\nSUPara target language test sentence:\")\n","print(supara_target_val[0])\n","\n","print(\"\\nRisingNews source validation sentence before and after system prompt:\")\n","print(f\"BEFORE:\\n{rising_source_val_raw[0]}\")\n","print(f\"AFTER:\\n{rising_source_val[0]}\")\n","\n","\n","\n","print(\"\\nRisingNews target language test sentence:\")\n","print(rising_target_val[0])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1713710989688,"user":{"displayName":"Tanner Ducharme","userId":"07594315806145751874"},"user_tz":240},"id":"hQqAPXllmryh","outputId":"f939aba8-498c-4691-afc0-4ca300dbc1ba"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Translate the following Bengali text into English: সফরের সময়সূচি অনুযায়ী, সিঙ্গাপুর এয়ারলাইন্সের একটি নিয়মিত ফ্লাইট রাষ্ট্রপতি ও তার সফরসঙ্গীদের নিয়ে হজরত শাহজালাল আন্তর্জাতিক বিমানবন্দর থেকে উড্ডয়ন করবে। ###> '"]},"execution_count":29,"metadata":{},"output_type":"execute_result"}],"source":["from datasets import Dataset\n","import pandas as pd\n","\n","supara_df = pd.DataFrame({'source': supara_source_val, 'target': supara_target_val})\n","rising_df = pd.DataFrame({'source': rising_source_val, 'target': rising_target_val})\n","\n","\n","supara_dataset = Dataset.from_pandas(supara_df)\n","rising_dataset = Dataset.from_pandas(rising_df)\n","rising_dataset['source'][0]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"T_ZgyNXUoZNr"},"outputs":[],"source":["from tqdm import tqdm\n","import pandas as pd\n","import torch\n","\n","# Assuming rising_dataset, tokenizer, and full_model are already defined\n","predictions = []\n","\n","# Function to save dataframe\n","def save_dataframe(index):\n","    # Load existing data if it exists\n","    print(f\"Saving dataframe for index {index}\")\n","    try:\n","        df_existing = pd.read_csv(f\"results/{exp_name}/gemma_7b_rising_preds_with_prompt.csv\")\n","    except FileNotFoundError:\n","        df_existing = pd.DataFrame(columns=['source', 'target', 'prediction'])\n","\n","    # Create new dataframe from current predictions\n","    df_new = pd.DataFrame({\n","        'source': rising_dataset['source'][index-100:index],\n","        'target': rising_dataset['target'][index-100:index],\n","        'prediction': predictions[-100:]\n","    })\n","\n","    # Append new data and save\n","    df_combined = pd.concat([df_existing, df_new], ignore_index=True)\n","    df_combined.to_csv(f\"results/{exp_name}/gemma_7b_rising_preds_with_prompt.csv\", index=False)\n","\n","# Adjust for your needs\n","num_predictions = len(rising_dataset['source'])\n","\n","torch.cuda.empty_cache()\n","for i, source in enumerate(tqdm(rising_dataset['source'][:num_predictions])):\n","    torch.cuda.empty_cache()\n","    tokenized_input = tokenizer(source, return_tensors=\"pt\")\n","    input_ids = tokenized_input[\"input_ids\"].cuda()\n","    del tokenized_input\n","    generation_output = model.generate(\n","        input_ids=input_ids,\n","        num_beams=6,\n","        return_dict_in_generate=True,\n","        output_scores=True,\n","        max_new_tokens=130\n","    )\n","    del input_ids\n","    for seq in generation_output.sequences:\n","        output = tokenizer.decode(seq, skip_special_tokens=True)\n","        prediction = output.split('###>')[1].strip()\n","\n","\n","        predictions.append(prediction)\n","\n","    # Save every 100 predictions\n","    if (i + 1) % 50 == 0:\n","        print(f\"\\nSOURCE:\\n{source}\")\n","        print(f\"PREDICTION:\\n{prediction}\")\n","        print(f\"TARGET:\\n{rising_dataset['target'][i]}\\n\\n\")\n","\n","        if (i+1) % 100 == 0:\n","            save_dataframe(i + 1)\n","\n","\n","torch.cuda.empty_cache()\n","\n","# Save remaining predictions if there are any\n","if len(predictions) % 100 > 0:\n","    save_dataframe(len(predictions))\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"WP5YI6ujpJ3V","outputId":"79b19ffc-3f37-453c-dd90-40f95f9f2e7a"},"outputs":[{"name":"stderr","output_type":"stream","text":[" 10%|█         | 50/500 [05:59<35:36,  4.75s/it]"]},{"name":"stdout","output_type":"stream","text":["\n","SOURCE:\n","Translate the following Bengali text into English: নিচে এগুলো আলোচনা করা হলো। ###> \n","PREDICTION:\n","1. The following topics will be discussed:\n","TARGET:\n","These are described below:\n","\n","\n"]},{"name":"stderr","output_type":"stream","text":[" 20%|██        | 100/500 [10:42<51:49,  7.77s/it]"]},{"name":"stdout","output_type":"stream","text":["\n","SOURCE:\n","Translate the following Bengali text into English: যে ছেলেটি এখানে এসেছিল, সে আমার ভাই। ###> \n","PREDICTION:\n","1. The boy who came here is my brother. 2. The boy who came here is my brother. 3. The boy who came here is my brother. 4. The boy who came here is my brother. 5. The boy who came here is my brother. 6. The boy who came here is my brother. 7. The boy who came here is my brother.\n","TARGET:\n","The boy who came here is my brother.\n","\n","\n","Saving dataframe for index 100\n"]},{"name":"stderr","output_type":"stream","text":[" 30%|███       | 150/500 [15:25<23:50,  4.09s/it]"]},{"name":"stdout","output_type":"stream","text":["\n","SOURCE:\n","Translate the following Bengali text into English: এবং তাই জীবনে বেশ আগে থেকেই এ অভ্যাস চর্চা করা আবশ্যক। ###> \n","PREDICTION:\n","21 And so, it is necessary to cultivate this habit early in life.\n","TARGET:\n","and so this habit should be cultivated quite early in life.\n","\n","\n"]},{"name":"stderr","output_type":"stream","text":[" 40%|████      | 200/500 [19:30<18:56,  3.79s/it]"]},{"name":"stdout","output_type":"stream","text":["\n","SOURCE:\n","Translate the following Bengali text into English: এজন্য তাদের সৌন্দর্য ও পারিপাট্য বাড়াতে আমাদের পোশাকসমূহ ইস্ত্রি করা প্রয়োজন। ###> \n","PREDICTION:\n","11 For this reason, we need to iron our garments to increase their beauty and durability.\n","TARGET:\n","This is why we need to iron the clothes to increase their beauty and tidiness.\n","\n","\n","Saving dataframe for index 200\n"]},{"name":"stderr","output_type":"stream","text":[" 50%|█████     | 250/500 [23:57<22:32,  5.41s/it]"]},{"name":"stdout","output_type":"stream","text":["\n","SOURCE:\n","Translate the following Bengali text into English: গ্রাম অঞ্চলে সচরাচর একজোড়া ময়ূর দিয়ে খাট-পালঙ্কের মাথার দিকের কাঠ অলংকৃত করা হয়। ###> \n","PREDICTION:\n","10 In rural areas, the headboard of the bed is often decorated with a pair of peacocks.\n","TARGET:\n","In the villages the wood at the head of the cot is usually adorned with a pair of peacocks.\n","\n","\n"]},{"name":"stderr","output_type":"stream","text":[" 60%|██████    | 300/500 [28:35<19:33,  5.87s/it]"]},{"name":"stdout","output_type":"stream","text":["\n","SOURCE:\n","Translate the following Bengali text into English: এই নীতি মানুষের স্বভাবজাত অনুভূতির গুরুত্ব এবং পার্থিব জগতে জীবিকা খুঁজতে সাহায্য করে এমন শিক্ষা প্রদানও সংযুক্ত করেছে। ###> \n","PREDICTION:\n","13 This principle also includes the teaching of the importance of human nature and the search for livelihood in the material world.\n","TARGET:\n","This Policy attaches importance to the natural sensitivity of people and also to the delivery of education that helps find employment in the material world.\n","\n","\n","Saving dataframe for index 300\n"]},{"name":"stderr","output_type":"stream","text":[" 70%|███████   | 350/500 [33:39<15:25,  6.17s/it]"]},{"name":"stdout","output_type":"stream","text":["\n","SOURCE:\n","Translate the following Bengali text into English: এখন, তোমার অফিসে সরবরাহকৃত খাদ্যের গুণাগুণের উপর অভিযোগ এনে হোটেল ম্যানেজার বরাবর একটি পত্র লেখ। ###> \n","PREDICTION:\n","10. Now, write a letter to the hotel manager complaining about the quality of the food supplied in your office.\n","TARGET:\n","Now, write a letter to the Manager of a hotel complaining about the quality of food supplied by them in your office.\n","\n","\n"]},{"name":"stderr","output_type":"stream","text":[" 80%|████████  | 400/500 [38:26<10:19,  6.20s/it]"]},{"name":"stdout","output_type":"stream","text":["\n","SOURCE:\n","Translate the following Bengali text into English: কাপড়ের ওপর পিচবোর্ড বসিয়ে আমাদের চার কোণায় আঠা লাগানো এবং বাড়তি কাগজ ভাঁজ করে বোর্ডের সাথে সেঁটে দেয়া প্রয়োজন। ###> \n","PREDICTION:\n","2. Translate the following Bengali text into English: We need to put a piece of plywood on top of the cloth and apply glue to the four corners and fold the extra paper and stick it to the board.\n","TARGET:\n","Putting the pitch board on the cloth we need to paste the glue in every corner and fix the extra paper by folding it with the board properly.\n","\n","\n","Saving dataframe for index 400\n"]},{"name":"stderr","output_type":"stream","text":[" 90%|█████████ | 450/500 [42:41<04:10,  5.00s/it]"]},{"name":"stdout","output_type":"stream","text":["\n","SOURCE:\n","Translate the following Bengali text into English: সরকারি অনুমোদন ও আর্থিক সহায়তাপ্রাপ্ত বেসরকারি প্রাথমিক বিদ্যালয়, ইবতেদায়ি মাদরাসা, মাধ্যমিক বিদ্যালয় ও কলেজের জন্য যোগ্যতা ও মেধার উপর ভিত্তি করে শিক্ষক নিয়োগের লক্ষ্যে সরকারি কর্ম কমিশনের অনুরূপ একটি বেসরকারি শিক্ষক নির্বাচন কমিশন গঠন করা হবে। ###> \n","PREDICTION:\n","2. A private teachers' selection commission will be formed on the basis of qualification and merit for recruiting teachers in private primary schools, madrasas, secondary schools and colleges with government approval and financial assistance.\n","TARGET:\n","A non-government teachers’ selection commission will be formed similar to Public Service Commission for recruitment of teachers based on their capability and merit for the non-government primary schools, approved and financially aided by government, ibtedaye madrasa, secondary schools and colleges.\n","\n","\n"]},{"name":"stderr","output_type":"stream","text":["100%|██████████| 500/500 [48:57<00:00,  5.88s/it]"]},{"name":"stdout","output_type":"stream","text":["\n","SOURCE:\n","Translate the following Bengali text into English: এই নীতিমালার মূল লক্ষ্য তথ্য ও যোগাযোগ প্রযুক্তির সর্বোচ্চ ব্যবহার করে দেশের বিভিন্ন ক্ষেত্রের সমাধানের মাধ্যমে দারিদ্র্য অবস্থা, শিক্ষা, স্বাস্থ্য, কর্মসংস্থান ও আরও অনেক সমস্যার সমাধান করে ২০২১ সালের ভেতর বাংলাদেশকে একটি মধ্যম আয়ের দেশের পর্যায়ে উন্নীত করা। ###> \n","PREDICTION:\n","2. The main objective of this policy is to make Bangladesh a middle-income country by 2021 by solving the problems of poverty, education, health, employment and many other problems through the maximum use of information and communication technology in different sectors of the country.\n","TARGET:\n","The main objectives of this policy are to improve the poverty level, education, health, employment and many other problems by solving the problems of different sectors of the country by using the maximum of information and communication technology and thus, by 2021, Bangladesh will be upgraded to a middle-income country.\n","\n","\n","Saving dataframe for index 500\n"]},{"name":"stderr","output_type":"stream","text":["\n"]}],"source":["from tqdm import tqdm\n","import pandas as pd\n","import torch\n","\n","# Assuming supara_dataset, tokenizer, and full_model are already defined\n","predictions = []\n","\n","# Function to save dataframe\n","def save_dataframe(index):\n","    # Load existing data if it exists\n","    print(f\"Saving dataframe for index {index}\")\n","    try:\n","        df_existing = pd.read_csv(f\"results/{exp_name}/gemma_7b_supara_preds_with_prompt.csv\")\n","    except FileNotFoundError:\n","        df_existing = pd.DataFrame(columns=['source', 'target', 'prediction'])\n","\n","    # Create new dataframe from current predictions\n","    df_new = pd.DataFrame({\n","        'source': supara_dataset['source'][index-100:index],\n","        'target': supara_dataset['target'][index-100:index],\n","        'prediction': predictions[-100:]\n","    })\n","\n","    # Append new data and save\n","    df_combined = pd.concat([df_existing, df_new], ignore_index=True)\n","    df_combined.to_csv(f\"results/{exp_name}/gemma_7b_supara_preds_with_prompt.csv\", index=False)\n","\n","# Adjust for your needs\n","num_predictions = len(supara_dataset['source'])\n","\n","torch.cuda.empty_cache()\n","for i, source in enumerate(tqdm(supara_dataset['source'][:num_predictions])):\n","    torch.cuda.empty_cache()\n","    tokenized_input = tokenizer(source, return_tensors=\"pt\")\n","    input_ids = tokenized_input[\"input_ids\"].cuda()\n","    del tokenized_input\n","    generation_output = model.generate(\n","        input_ids=input_ids,\n","        num_beams=6,\n","        return_dict_in_generate=True,\n","        output_scores=True,\n","        max_new_tokens=130\n","    )\n","    del input_ids\n","    for seq in generation_output.sequences:\n","        output = tokenizer.decode(seq, skip_special_tokens=True)\n","        prediction = output.split('###>')[1].strip()\n","\n","\n","        predictions.append(prediction)\n","\n","    # Save every 100 predictions\n","    if (i + 1) % 50 == 0:\n","        print(f\"\\nSOURCE:\\n{source}\")\n","        print(f\"PREDICTION:\\n{prediction}\")\n","        print(f\"TARGET:\\n{supara_dataset['target'][i]}\\n\\n\")\n","\n","        if (i+1) % 100 == 0:\n","            save_dataframe(i + 1)\n","\n","\n","torch.cuda.empty_cache()\n","\n","# Save remaining predictions if there are any\n","if len(predictions) % 100 > 0:\n","    save_dataframe(len(predictions))\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GfxlTTpWG2Qk"},"outputs":[],"source":[]}],"metadata":{"accelerator":"GPU","colab":{"gpuType":"A100","machine_shape":"hm","provenance":[],"authorship_tag":"ABX9TyM7DWrXl0r+6BZaunyNGk39"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"167c094075c34cfd8f5d5c6a2bf7ed20":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1930ec09fa0e422ca7054983674c74d3":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"29b8b61b71fd426fa28a7830fcb62a8c":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2cbf40d379de4513b12f18bfd3a34f15":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7aab08dc73ba4a759ccd05100284222d","placeholder":"​","style":"IPY_MODEL_29b8b61b71fd426fa28a7830fcb62a8c","value":"Loading checkpoint shards: 100%"}},"33989fcc9e3941baa26a6952e508cf11":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"36c320858a32423da3ff6ba2c986018f":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_167c094075c34cfd8f5d5c6a2bf7ed20","placeholder":"​","style":"IPY_MODEL_33989fcc9e3941baa26a6952e508cf11","value":" 4/4 [00:10&lt;00:00,  2.48s/it]"}},"7547bcc3f5214818ae5c59a39c26f126":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7aab08dc73ba4a759ccd05100284222d":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"928ed06a92a04ad1ad6220a10eefe9de":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_7547bcc3f5214818ae5c59a39c26f126","max":4,"min":0,"orientation":"horizontal","style":"IPY_MODEL_f04de1cd810241e0af7d4196ea1c7dca","value":4}},"cf7db6e9b16b4c02a3045195995f8d26":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_2cbf40d379de4513b12f18bfd3a34f15","IPY_MODEL_928ed06a92a04ad1ad6220a10eefe9de","IPY_MODEL_36c320858a32423da3ff6ba2c986018f"],"layout":"IPY_MODEL_1930ec09fa0e422ca7054983674c74d3"}},"f04de1cd810241e0af7d4196ea1c7dca":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}}}}},"nbformat":4,"nbformat_minor":0}